---
import logo from '../images/pifi-logo-no-bg.svg'
import { Image } from 'astro:assets'
---

<header>
  <Image src={logo} alt="Pi Finance UK Logo" width={30} />
  <h3>PiFinance</h3>
</header>

<style>
  html:not([data-scroll='0']) header {
    background: var(--primary-color-3);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  header {
    width: 100%;
    display: flex;
    align-items: center;
    gap: 0.6rem;
    padding: 0.75rem 2rem;
    position: fixed;
    transition: background 0.25s;
    z-index: 1000;
  }
  header h3 {
    font-weight: bold;
    margin: 0;
  }
</style>

<script>
  import { isMenuOpen } from '../store'

  function openMenu() {
    isMenuOpen.set(true)
    console.log('open menu')
  }

  document.getElementById('menu-button')?.addEventListener('click', openMenu)

  // The debounce function receives our function as a parameter
  const debounce = (fn: { (...params: any[]): void; (arg0: any): void }) => {
    // This holds the requestAnimationFrame reference, so we can cancel it if we wish
    let frame: number

    // The debounce function returns a new function that can receive a variable number of arguments
    return (...params: any[]) => {
      // If the frame variable has been defined, clear it now, and queue for next frame
      if (frame) {
        cancelAnimationFrame(frame)
      }

      // Queue our function call for the next frame
      frame = requestAnimationFrame(() => {
        // Call our function and pass any params we received
        fn(...params)
      })
    }
  }

  // Reads out the scroll position and stores it in the data attribute
  // so we can use it in our stylesheets
  const storeScroll = () => {
    document.documentElement.dataset.scroll = '' + window.scrollY
  }

  // Listen for new scroll events, here we debounce our `storeScroll` function
  document.addEventListener('scroll', debounce(storeScroll), { passive: true })

  // Update scroll position for first time
  storeScroll()
</script>
