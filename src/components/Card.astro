---
interface Props {
  href?: string
  bgImageUrl?: string
  bgColor?: string
  bgBlendMode?: 'lighten' | 'darken'
  invertColor?: boolean
  class?: string
}

const {
  href,
  bgImageUrl,
  bgColor,
  invertColor,
  bgBlendMode = 'normal',
  class: className,
  ...rest
} = Astro.props
const bgImage = bgImageUrl ? `url(${bgImageUrl})` : 'none'
const color = invertColor ? '#fff' : '#000'
---

<div class:list={['card', { [className as string]: !!className }]} {...rest}>
  {
    href ? (
      <a class="link" href={href}>
        <slot />
      </a>
    ) : (
      <slot />
    )
  }
</div>

<style define:vars={{ bgImage, color, bgColor, bgBlendMode }}>
  .card {
    background-color: var(--bgColor, #fff);
    border-radius: 2rem;
    background-image: var(--bgImage);
    background-repeat: no-repeat;
    background-size: cover;
    padding: 2rem;
    width: 100%;
    color: var(--color);
    background-blend-mode: var(--bgBlendMode);
  }
  .card > .link {
    width: 100%;
    text-decoration: none;
  }

  @media (max-width: 800px) {
    .card {
      padding: 1rem;
    }
  }
</style>
